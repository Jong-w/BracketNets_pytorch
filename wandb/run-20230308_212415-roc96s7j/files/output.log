2023/03/08 09:24:16 PM Namespace(alpha=0.5, cuda=True, dilation=10, entropy_coef=1e-05, env_max_step=100, env_name='MiniGrid-FourRooms-v0', eps=0.0001, gamma_m=1, gamma_w=1, grad_clip=1.0, grid_size=19, hidden_dim_manager=64, hidden_dim_worker=32, lr=1e-06, max_steps=100000000, mlp=1, num_steps=100, num_workers=32, reward_reg=1, run_name='baseline', seed=0, time_horizon=10, whole=1)
Traceback (most recent call last):
  File "/Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pydev/_pydevd_bundle/pydevd_comm.py", line 304, in _on_run
    r = r.decode('utf-8')
UnicodeDecodeError: 'utf-8' codec can't decode bytes in position 1022-1023: unexpected end of data
Traceback (most recent call last):
  File "/Users/dongjaekim/Library/CloudStorage/GoogleDrive-dongjae.k.kim@gmail.com/내 드라이브/연구/fun/Fun_Hierarchy/feudalnet_main.py", line 409, in <module>
    main(args)
  File "/Users/dongjaekim/Library/CloudStorage/GoogleDrive-dongjae.k.kim@gmail.com/내 드라이브/연구/fun/Fun_Hierarchy/feudalnet_main.py", line 401, in main
    experiment(args)
  File "/Users/dongjaekim/Library/CloudStorage/GoogleDrive-dongjae.k.kim@gmail.com/내 드라이브/연구/fun/Fun_Hierarchy/feudalnet_main.py", line 108, in experiment
    envs = make_envs(args.env_name, args.num_workers, args.whole, args.reward_reg, args.env_max_step, args.grid_size)
  File "/Users/dongjaekim/Library/CloudStorage/GoogleDrive-dongjae.k.kim@gmail.com/내 드라이브/연구/fun/Fun_Hierarchy/utils.py", line 174, in make_envs
    envs = gym.vector.make(env_name, num_envs, wrappers=wrapper_fn)
  File "/Users/dongjaekim/opt/anaconda3/envs/Fun_Hierarchy_atari/lib/python3.7/site-packages/gym/vector/__init__.py", line 61, in make
    return AsyncVectorEnv(env_fns) if asynchronous else SyncVectorEnv(env_fns)
  File "/Users/dongjaekim/opt/anaconda3/envs/Fun_Hierarchy_atari/lib/python3.7/site-packages/gym/vector/async_vector_env.py", line 117, in __init__
    child_pipe.close()
  File "/Users/dongjaekim/opt/anaconda3/envs/Fun_Hierarchy_atari/lib/python3.7/multiprocessing/connection.py", line 173, in close
    def close(self):
